name: Deploy Streamlit App with Nginx

on:
  push:
    branches:
      - main  # Trigger deployment when code is pushed to the `main` branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and push Docker images for Streamlit app
      - name: Build and push Streamlit Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ats-expert:latest -f app/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/ats-expert:latest

      # Step 5: Pull and push the official Nginx image (no build needed)
      - name: Pull and push official Nginx Docker image
        run: |
          docker pull nginx:latest
          docker tag nginx:latest ${{ secrets.DOCKERHUB_USERNAME }}/nginx-proxy:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx-proxy:latest

      # Step 6: SSH into EC2 and deploy the Docker containers
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Pull the latest Docker images from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ats-expert:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx-proxy:latest
            
            # Stop and remove the old containers
            docker stop streamlit-app nginx-proxy || true
            docker rm streamlit-app nginx-proxy || true
            
            # Run the containers
            docker run -d --name streamlit-app -p 8501:8501 ${{ secrets.DOCKERHUB_USERNAME }}/ats-expert:latest
            docker run -d --name nginx-proxy -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/nginx-proxy:latest
